<Window x:Class="AnimeWatchList.AddWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AnimeWatchList"
        mc:Ignorable="d"
        Title="" Height="800" Width="800" Background="#FF1E1E1E"
        MinWidth="800" MinHeight="400" x:Name="window"
        WindowStyle="None" AllowsTransparency="True"
        BorderBrush="#FF3D3D3D" BorderThickness="2"
        WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <local:WidthConverter x:Key="WidthConverter"/>
        <local:EnableConverter x:Key="EnableConverter"/>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border>
                            <Grid>
                                <Grid>
                                    <Border x:Name="border" 
                                            CornerRadius="3,3,0,0"
                                            Background="WhiteSmoke"/>
                                </Grid>
                                <ContentPresenter ContentSource="Header"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected"
                                     Value="True">
                                <Setter TargetName="border"
                                        Property="Background"
                                        Value="#FF2D2D2D"/>
                            </Trigger>
                            <Trigger Property="IsSelected"
                                     Value="False">
                                <Setter TargetName="border"
                                        Property="Background"
                                        Value="#FF4D4D4D"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="#FF3F3F3F"
                  BorderBrush="#FF97A0A5"
                  BorderThickness="1" />
                <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="#FF3F3F3F" 
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0,0,1,0" />
                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
            </Grid>
            <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="#FF3D3D3D"
                            Foreground="White"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                                <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                x:Name="DropDownBorder"
                                Background="#FF3D3D3D"

                                BorderThickness="1"
                                BorderBrush="#888888"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!-- SimpleStyles: ComboBoxItem -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FF4D4D4D"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF5D5D5D"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF5D5D5D"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF5E5E5E"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF5E5E5E"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FF2D2D2D"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FFAAAAAA"/>
        <Style x:Key="ButtonStyleOwn" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="25"/>
    </WindowChrome.WindowChrome>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <!--    TitleBar    -->
        <DockPanel Height="25">
            <Button x:Name="button_Close" DockPanel.Dock="Right" Width="25" Background="#FF1D1D1D" WindowChrome.IsHitTestVisibleInChrome="True" BorderThickness="0">
                <Image x:Name="image_Close" Height="15" Width="15"/>
            </Button>
            <Button x:Name="button_MinMax" DockPanel.Dock="Right" Width="25" Background="#FF1D1D1D" WindowChrome.IsHitTestVisibleInChrome="True" BorderThickness="0">
                <Image x:Name="image_MinMax" Height="15" Width="15"/>
            </Button>
            <Button x:Name="button_Minimized" DockPanel.Dock="Right" Width="25" Background="#FF1D1D1D" WindowChrome.IsHitTestVisibleInChrome="True" BorderThickness="0">
                <Image x:Name="image_Minimized" Height="15" Width="15"/>
            </Button>
            <Label DockPanel.Dock="Left" Content="MediumWatchList" Foreground="White"/>
        </DockPanel>

        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
            <Grid Margin="10">
                <!--    Hauptgrid   -->
                <Grid.RowDefinitions>
                    <RowDefinition MinHeight="400" MaxHeight="400"/>
                    <RowDefinition MinHeight="40"/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <!--   Bild, Name, Beschreibung  -->
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="275" MaxWidth="275"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <!--    Links   -->
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="40"/>
                        </Grid.RowDefinitions>

                        <Image Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="275" Height="360"/>
                        <Button Style="{DynamicResource ButtonStyleOwn}" Grid.Row="1" Width="180" Height="25" Background="#FF3D3D3D" Foreground="White" Content="Auswählen" x:Name="button_Choose"/>
                    </Grid>

                    <!--    Rechts   -->
                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="25"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <DockPanel Grid.Row="0" LastChildFill="false">
                            <Label DockPanel.Dock="Left" Content="Name:" Margin="10,10,0,0" Padding="0,3,3,3" Foreground="White" Height="26" x:Name="label_AnimeName"/>
                            <ComboBox x:Name="combobox_AnimeNameDescription" DockPanel.Dock="Right" Width="200" Height="25" Margin="0,0,0,10" SelectionChanged="OnSelectionChanged"/>
                        </DockPanel>
                        <TextBox x:Name="textbox_AnimeName" PreviewTextInput="OnAnimeNameChanged" Grid.Row="1" Text="" Margin="10,0,0,0" TextWrapping="Wrap" Background="#FF3D3D3D" Foreground="White"/>
                        <Label Grid.Row="2" Content="Beschreibung:" Margin="10,0,0,0" Padding="0,3,3,3" Foreground="White" Height="26" x:Name="label_Description"/>
                        <TextBox x:Name="textbox_AnimeDescription" PreviewTextInput="OnAnimeDescriptionChanged" TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" Grid.Row="3" Text="" Margin="10,0,0,10" Foreground="White" Background="#FF3D3D3D" MaxHeight="320"/>
                    </Grid>
                </Grid>

                <!--    Genre   -->
                <Grid x:Name="grid_Genre" Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <!--    Links   -->
                    <GroupBox x:Name="groupbox_MainGenre" Grid.Column="0" Header="Main-Genre" Foreground="White" BorderBrush="White" Margin="0,0,5,10" MinWidth="150">
                        <DockPanel x:Name="dockpanel_MainGenre" Margin="5"/>
                    </GroupBox>

                    <!--    Rechts   -->
                    <GroupBox x:Name="groupbox_SubGenre" Grid.Column="1" Header="Sub-Genre" Foreground="White" BorderBrush="White" Margin="5,0,0,10" MinWidth="150">
                        <DockPanel x:Name="dockpanel_SubGenre" Margin="5"/>
                    </GroupBox>
                </Grid>

                <!--    Mehr Details    -->
                <ItemsControl Width="{Binding ElementName=window, Path=Width, Converter={StaticResource WidthConverter}}" Grid.Row="2">
                    <!--    Define other Paneltype for placing in the Items    -->
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <!--    Produktionsjahre    -->
                    <DockPanel Margin="0,0,20,10" LastChildFill="False">
                        <!--    Linke Seite    -->
                        <Grid DockPanel.Dock="Left">
                            <Label Foreground="White" Content="Produktionsjahre:" x:Name="label_Productionyears"/>
                        </Grid>

                        <!--    Rechte Seite    -->
                        <DockPanel DockPanel.Dock="Left">
                            <TextBox x:Name="textbox_Productionyear1" Tag="Year_0" VerticalAlignment="Top" Margin="0,5,0,0" PreviewTextInput="OnChangeProduktionyear" MinWidth="50" Height="20" Foreground="White" Background="#FF4D4D4D"/>
                            <Label Foreground="White" Content="-"/>
                            <TextBox x:Name="textbox_Productionyear2" Tag="Year_1" VerticalAlignment="Top" Margin="0,5,0,0" PreviewTextInput="OnChangeProduktionyear" MinWidth="50" Height="20" Foreground="White" Background="#FF4D4D4D"/>
                        </DockPanel>
                    </DockPanel>

                    <!--    Hauptdarsteller    -->
                    <DockPanel Margin="0,0,20,10" LastChildFill="False">
                        <!--    Linke Seite    -->
                        <Label DockPanel.Dock="Left" Foreground="White" Content="Hauptdarsteller:" x:Name="label_MainActors"/>

                            <!--    Rechte Seite    -->
                        <DockPanel Margin="0,5,0,0" DockPanel.Dock="Left">
                            <DockPanel x:Name="dockpanel_MainActors" DockPanel.Dock="Top"/>
                            <DockPanel DockPanel.Dock="Bottom" LastChildFill="False">
                                <TextBox x:Name="textbox_MainActor" DockPanel.Dock="Top" Margin="0,0,0,1" MinWidth="100" Height="20" Foreground="White" Background="#FF3D3D3D"/>
                                <Button Style="{DynamicResource ButtonStyleOwn}" x:Name="button_AddMainActor" IsEnabled="{Binding ElementName=textbox_MainActor, Path=Text, Converter={StaticResource EnableConverter}}" Click="AddMoreDetails" Tag="MainActor_0" DockPanel.Dock="Top" Content="Hinzufügen" Background="#FF4D4D4D" Foreground="White"/>
                            </DockPanel>
                        </DockPanel>
                    </DockPanel>

                    <!--    Produzenten    -->
                    <DockPanel Margin="0,0,20,10" LastChildFill="False">
                        <!--    Linke Seite    -->
                        <Label DockPanel.Dock="Left" Foreground="White" Content="Produzenten:" x:Name="label_Producers"/>

                            <!--    Rechte Seite    -->
                        <DockPanel Margin="0,5,0,0" DockPanel.Dock="Left">
                            <DockPanel x:Name="dockpanel_Producers" DockPanel.Dock="Top"/>
                            <DockPanel DockPanel.Dock="Bottom" LastChildFill="False">
                                <TextBox x:Name="textbox_Producer" DockPanel.Dock="Top" Margin="0,0,0,1" MinWidth="100" Height="20" Foreground="White" Background="#FF4D4D4D"/>
                                <Button Style="{DynamicResource ButtonStyleOwn}" x:Name="button_AddProducer" IsEnabled="{Binding ElementName=textbox_Producer, Path=Text, Converter={StaticResource EnableConverter}}" Click="AddMoreDetails" Tag="Producer_0" DockPanel.Dock="Top" Content="Hinzufügen" Background="#FF4D4D4D" Foreground="White"/>
                            </DockPanel>
                        </DockPanel>
                    </DockPanel>

                    <!--    Regisseure    -->
                    <Grid>
                        <DockPanel Margin="0,0,20,10" LastChildFill="False">
                            <!--    Linke Seite    -->
                            <Label DockPanel.Dock="Left" Foreground="White" Content="Regisseure:" x:Name="label_Directors"/>

                                <!--    Rechte Seite    -->
                            <DockPanel Margin="0,5,0,0" DockPanel.Dock="Left">
                                <DockPanel x:Name="dockpanel_Directors" DockPanel.Dock="Top"/>
                                <DockPanel DockPanel.Dock="Bottom" LastChildFill="False">
                                    <TextBox x:Name="textbox_Director"  DockPanel.Dock="Top" Margin="0,0,0,1" MinWidth="100" Height="20" Foreground="White" Background="#FF4D4D4D"/>
                                    <Button Style="{DynamicResource ButtonStyleOwn}" x:Name="button_AddDirector" IsEnabled="{Binding ElementName=textbox_Director, Path=Text, Converter={StaticResource EnableConverter}}" Click="AddMoreDetails" Tag="Director_0" DockPanel.Dock="Top" Content="Hinzufügen" Background="#FF4D4D4D" Foreground="White"/>
                                </DockPanel>
                            </DockPanel>
                        </DockPanel>
                    </Grid>

                    <!--    Autoren    -->
                    <Grid>
                        <DockPanel Margin="0,0,20,10" LastChildFill="False">
                            <!--    Linke Seite    -->
                            <Label DockPanel.Dock="Left" Foreground="White" Content="Autoren:" x:Name="label_Authors"/>

                                <!--    Rechte Seite    -->
                            <DockPanel Margin="0,5,0,0" DockPanel.Dock="Left">
                                <DockPanel x:Name="dockpanel_Authors" DockPanel.Dock="Top"/>
                                <DockPanel DockPanel.Dock="Bottom" LastChildFill="False">
                                    <TextBox x:Name="textbox_Author" DockPanel.Dock="Top" Margin="0,0,0,1" MinWidth="100" Height="20" Foreground="White" Background="#FF4D4D4D"/>
                                    <Button Style="{DynamicResource ButtonStyleOwn}" x:Name="button_AddAuthor" IsEnabled="{Binding ElementName=textbox_Author, Path=Text, Converter={StaticResource EnableConverter}}" Click="AddMoreDetails" Tag="Author_0" DockPanel.Dock="Top" Content="Hinzufügen" Background="#FF4D4D4D" Foreground="White"/>
                                </DockPanel>
                            </DockPanel>
                        </DockPanel>
                    </Grid>
                </ItemsControl>

                <!--    Staffel/Episoden     -->
                <Grid Grid.Row="3">
                    <TabControl x:Name="tabcontrol_EpisodeList" Margin="0,5,0,0" Background="#FF1D1D1D" BorderThickness="3" BorderBrush="White">
                        <TabItem Selector.Selected="OnTabSelected">
                            <TabItem.Header>
                                <Label x:Name="label_AddSeason" Width="25" ToolTip="Staffel hinzufügen" Tag="0" Content=" +" MouseLeftButtonDown="AddSeason" Padding="0" Margin="0,-3,0,0" Foreground="Wheat" FontSize="20"/>
                            </TabItem.Header>
                        </TabItem>
                    </TabControl>
                </Grid>
            </Grid>
        </ScrollViewer>
        <DockPanel Grid.Row="2" LastChildFill="False" Margin="5,0,5,5">
            <Button x:Name="button_Done" Click="AddAnime"  DockPanel.Dock="Left" Content="Fertig" MinWidth="150" Background="ForestGreen" Foreground="Wheat" Tag="0"/>
            <Button x:Name="button_Abort" Click="AbortAnime" DockPanel.Dock="Right" Content="Abbrechen" MinWidth="150" Background="Red" Foreground="Wheat"/>
        </DockPanel>
    </Grid>
</Window>